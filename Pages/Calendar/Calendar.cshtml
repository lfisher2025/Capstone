


    @*
<h2>@ViewData["Title"]</h2>

<!-- ChatGPT was used to help create the table of the Calendar <!--
<!-- https://stackoverflow.com/questions/51015825/c-sharp-razor-dynamic-calendar-using-html-table-in-asp-net I used this repository to help get explain how to create a calendar<!--

<!-- Calendar Navigation -->
<div class="calendar-navigation d-flex justify-content-between align-items-center">
    <button class="btn btn-secondary" onclick="changeMonth(-1)">Previous Month</button>
    <span id="currentMonth" class="mx-3 fw-bold fs-4"></span>
    <button class="btn btn-secondary" onclick="changeMonth(1)">Next Month</button>

</div>


<!-- Calendar Table -->
<div class="calendar">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Sun</th>
                <th>Mon</th>
                <th>Tue</th>
                <th>Wed</th>
                <th>Thu</th>
                <th>Fri</th>
                <th>Sat</th>
            </tr>
        </thead>
        <tbody id="calendar-body">
        </tbody>
    </table>
</div>

<!-- Add Event Popup -->
<div id="eventForm" class="event-popup" style="display:none;">
    <h3>Add Event</h3>

    <label for="eventTitle">Event Title:</label>
    <input type="text" id="eventTitle" class="form-control" placeholder="Event Title" />

    <label for="eventDate">Event Date:</label>
    <input type="date" id="eventDate" class="form-control" />

    <label for="eventTime">Event Time:</label>
    <input type="time" id="eventTime" class="form-control" />

    <label for="eventColor">Event Color:</label>
    <select id="eventColor" class="form-control">
        <option value="red">Red</option> <!-- I just added 3 Colors for now. We could possibly add custom colors in the future -->
        <option value="green">Green</option>
        <option value="blue">Blue</option>
    </select>

    <button class="btn btn-success mt-2" onclick="saveEvent()">Submit</button>
    <button class="btn btn-danger mt-2" onclick="closeEventForm()">Cancel</button>
</div>

<!-- Edit Event Popup -->
<div id="editEventForm" class="event-popup" style="display:none;">
    <h3>Edit Event</h3>

    <label for="editEventTitle">Event Title:</label>
    <input type="text" id="editEventTitle" class="form-control" />

    <label for="editEventTime">Event Time:</label>
    <input type="time" id="editEventTime" class="form-control" />

    <label for="editEventColor">Event Color:</label>
    <select id="editEventColor" class="form-control">
        <option value="red">Red</option>
        <option value="green">Green</option>
        <option value="blue">Blue</option>
    </select>

    <button class="btn btn-primary mt-2" onclick="updateEvent()">Save</button>
    <button class="btn btn-danger mt-2" onclick="deleteEvent()">Delete</button>
    <button class="btn btn-secondary mt-2" onclick="closeEditForm()">Cancel</button>
</div>

<!-- Add Event Button -->
<!-- Used AI to help with setting AM and PM -->

<button class="btn btn-primary" onclick="showEventForm()">Add Event</button>

<script>
    let currentMonth = new Date();
    let events = [];

    function updateMonthDisplay() {
        const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        document.getElementById('currentMonth').textContent = `${monthNames[currentMonth.getMonth()]} ${currentMonth.getFullYear()}`;
    }

    // This changed the month
    function changeMonth(offset) {
        currentMonth.setMonth(currentMonth.getMonth() + offset);
        renderCalendar();
    }

    // this sets the time using AM and PM 
    function formatTime(time) {
        const [hours, minutes] = time.split(':');
        let formattedHours = parseInt(hours, 10);
        const ampm = formattedHours >= 12 ? 'PM' : 'AM';
        formattedHours = formattedHours % 12 || 12;
        return `${formattedHours}:${minutes} ${ampm}`;
    }
// Used ChatGPT to help complete the rendering of the calendar 

    function renderCalendar() {
        const firstDay = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);
        const lastDay = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);
        const calendarBody = document.getElementById('calendar-body');
        calendarBody.innerHTML = '';

        let row = document.createElement('tr');
        for (let i = 0; i < firstDay.getDay(); i++) {
            row.appendChild(document.createElement('td'));
        }

        for (let day = 1; day <= lastDay.getDate(); day++) {
            if (row.children.length === 7) {
                calendarBody.appendChild(row);
                row = document.createElement('tr');
            }

            const cell = document.createElement('td');
            cell.classList.add('calendar-day');
            cell.textContent = day;
            cell.setAttribute('data-day', day);

            const today = new Date();
            if (today.getDate() === day && today.getMonth() === currentMonth.getMonth() && today.getFullYear() === currentMonth.getFullYear()) {
                cell.style.backgroundColor = "#ffff99";
            }


            // Used ChatGPT to help account for the year for an event
         const dayEvents = events
    .filter(event => {
        let eventDate = new Date(event.date);
        return (
            eventDate.getDate() === day &&
            eventDate.getMonth() === currentMonth.getMonth() &&
            eventDate.getFullYear() === currentMonth.getFullYear()
        );
    })
    .sort((a, b) => a.time.localeCompare(b.time)); // Sorts events by time in ascending order




            dayEvents.forEach(event => {
                let eventElement = document.createElement('div');
                eventElement.innerText = `${event.title} at ${formatTime(event.time)}`;
                eventElement.style.backgroundColor = event.color;
                eventElement.classList.add('event');
                eventElement.onclick = () => showEditForm(event);
                cell.appendChild(eventElement);
            });

            row.appendChild(cell);
        }
        calendarBody.appendChild(row);
        updateMonthDisplay();
    }

    function showEventForm() {
        document.getElementById('eventForm').style.display = 'block';
    }

    function closeEventForm() {
        document.getElementById('eventForm').style.display = 'none';
    }

    function saveEvent() {
        const title = document.getElementById('eventTitle').value;
        const date = new Date(document.getElementById('eventDate').value + "T00:00:00");
        const time = document.getElementById('eventTime').value;
        const color = document.getElementById('eventColor').value;

        if (!title || !date || !time) {
            alert('Please enter title, date, and time');
            return;
        }

        const event = { title, date, time, color };
        events.push(event);
        closeEventForm();
        renderCalendar();
    }

    function showEditForm(event) {
        document.getElementById('editEventTitle').value = event.title;
        document.getElementById('editEventTime').value = event.time;
        document.getElementById('editEventColor').value = event.color;
        document.getElementById('editEventForm').dataset.index = events.indexOf(event);
        document.getElementById('editEventForm').style.display = 'block';
    }

    function closeEditForm() {
        document.getElementById('editEventForm').style.display = 'none';
    }

    function updateEvent() {
        const index = document.getElementById('editEventForm').dataset.index;
        events[index].title = document.getElementById('editEventTitle').value;
        events[index].time = document.getElementById('editEventTime').value;
        events[index].color = document.getElementById('editEventColor').value;
        closeEditForm();
        renderCalendar();
    }

    function deleteEvent() {
        const index = document.getElementById('editEventForm').dataset.index;
        events.splice(index, 1);
        closeEditForm();
        renderCalendar();
    }

    renderCalendar();
</script>*@



@page
@model Lab1.Pages.Calendar.CalendarModel
@{
    ViewData["Title"] = "Calendar";
}

@section Styles {
    <link rel="stylesheet" href="~/css/calendar.css" />
}


<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="JMU CARE" />
    <title>JMU CARE Calendar</title>
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- LOAD BOOTSTRAP CSS - DO NOT DELETE -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="styles.css" rel="stylesheet">
    <!-- END LOADING BOOTSTRAP CSS -->
    <style>
        html, body {
            min-height: 100%;
            min-width: 100%
        }

        .container {
            display: flex;
            height: 100%;
            width: 100%;
        }

        @*
        .container-fluid {
        display: flex;
        min-height: 100%;
        }*@

        .column {
            justify-content: center;
            align-items: center;
            border: 1px solid #aaa;
            height: 100%;
            width: 100%;
        }

        .sidebar {
            height: 100%;
            width: 250px;
            position: fixed;
            z-index: 1;
            top: 0;
            left: 0;
            overflow-x: hidden;
            background: #450084;
            color: white;
            min-height: 170vh;
            padding: 1rem;
        }

            .sidebar a {
                position: relative;
                color: white;
                display: block;
                padding: 10px;
                text-decoration: none;
                margin-bottom: 10px;
                transition: color 0.3s;
            }

                .sidebar a.active {
                    background-color: white;
                    color: #450084;
                    font-weight: bold;
                }

                .sidebar a:hover {
                    color: black;
                }

                .sidebar a::after {
                    content: "";
                    position: absolute;
                    bottom: 4px;
                    left: 10px;
                    width: 0%;
                    height: 2px;
                    background-color: white;
                    transition: width 0.3s ease-in-out;
                }

        .logo {
            position: relative;
            vertical-align: t;
            background-color: white;
            margin-bottom: 20px;
        }

        .tab {
            padding: 20px 20px 20px 20px;
        }

        .tabs button {
            position: absolute;
            width: 40%;
            padding: 10px;
            background-color: #450084;
            color: white;
            border-radius: 20px; /* Rounded button */
            cursor: pointer;
            transition: 0.3s ease;
        }

            .tabs button:hover {
                background-color: #B599CE;
            }

        .main-content {
            flex: 1.5;
            background-color: white;
            padding: 0px 10px;
            margin-left: 200px;
            width: 90%;
        }

        .project-window {
            background-color: #eee;
            padding: 100px;
            width: 500px;
            box-shadow: 0 4px 8px rgba(181, 153, 206, 0.815);
            border-radius: 50px;
            text-align: left;
        }

        .calendar-container .day {
            width: 38px;
            height: 38px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            margin: 2px;
            cursor: pointer;
            background-color: lightgrey;
        }

            .calendar-container .day.selected {
                background-color: #450084;
                color: white;
            }

        .profile-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 5px;
            background-color: white; /* Adjust as needed */
        }

        .profile-img {
            width: 50px; /* Adjust size as needed */
            height: 50px;
            border-radius: 50%; /* Makes it a circle */
            object-fit: cover; /* Ensures the image fills the space */
        }

        .header-container {
            margin-bottom: 20px;
            padding-bottom: 10px;
            display: flex;
            justify-content: space-between; /* Space items evenly */
            align-items: center;
            background-color: white;
            border-bottom: 2px solid #ddd; /* Optional divider */
            flex-direction: row-reverse; /* Switches the order */
        }

        .right-panel {
            background-color: #DACCE6;
            border-radius: 20px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.05);
            margin-bottom: 30px;
            .right-section

        {
            flex: 0.8;
        }

        .project-summary {
            background-color: #F4EFE1;
            padding: 15px;
            border-radius: 10px;
        }

        .stats-box {
            background-color: #F4EFE1;
            padding: 15px;
            border-radius: 10px;
        }

        .calendar-container {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 10px;
        }

        .day {
            width: 40px;
            height: 40px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin: 5px;
            cursor: pointer;
            border-radius: 50%;
        }

        .form-check-input:not(:checked):focus {
            border-color: black;
            box-shadow: none;
        }

        .day.selected {
            background-color: #450084;
        }

        .right-panel,
        .project-summary,
        .stats-box,
        .calendar-container,
        .todays-task {
            background-color: #F4EFE1;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .clickable-card:hover {
            box-shadow: 0 4px 12px rgba(69, 0, 132, 0.2);
            color: #450084;
        }

    </style>
</head>
        <div class="row">
            <div class="sidebar">
                <img src="/images/JMUCare.png" alt="jmucarelogo" class="logo img-fluid w-100" style="vertical-align: top;">
                <div class="row">
                    <a asp-page="/Faculty/FacultyHome"><i class="bi bi-house-door-fill me-2"></i>Home</a>
                    <a href="/Employee/EmployeeViewProject"><i class="bi bi-kanban-fill me-2"></i>Projects</a>
                    <a href="/Task"><i class="bi bi-list-check me-2"></i>Tasks</a>
                    <a href="/Faculty/ViewGrant"><i class="bi bi-cash-coin me-2"></i>Grants</a>
                    <a href="/People"><i class="bi bi-people-fill me-2"></i>People</a>
                    <a href="/Calendar/Calendar" class="active"><i class="bi bi-calendar-event-fill me-2"></i>Calendar</a>
                    <a href="/Settings"><i class="bi bi-gear-fill me-2"></i>Settings</a>

                </div>
            </div>
        </div>


        <div class="main-content">
            <div class="header-container">
                <div class="profile-section">
                    <img src="/images/persona2.jpg" alt="Profile Picture" class="profile-img">
                    <span class="profile-name">Anna Smith</span>
                </div>
                <h3 class="calendar-title">Calendar</h3>
            </div>

            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4>@DateTime.Now.ToString("MMMM yyyy")</h4>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#eventModal">
                    Add Event +
                </button>
            </div>

            <!-- Calendar Table -->
            <table class="calendar table">
                <thead>
                    <tr>
                        <th>Sun</th>
                        <th>Mon</th>
                        <th>Tue</th>
                        <th>Wed</th>
                        <th>Thu</th>
                        <th>Fri</th>
                        <th>Sat</th>
                    </tr>
                </thead>
                <tbody>
            @foreach (var week in Model.Days)
            {
                <tr>
                    @foreach (var day in week)
                    {
                        <td>
                            @if (day.DayOfMonth > 0)
                            {
                                <div>@day.DayOfMonth</div>

                                @* Show tasks *@
                                @foreach (var task in Model.TaskList)
                                {
                                    if (task.Deadline.Day == day.DayOfMonth &&
                                    task.Deadline.Month == Model.CurrentMonth &&
                                    task.Deadline.Year == Model.CurrentYear)
                                    {
                                        <div class="badge bg-secondary">@task.TaskName</div>
                                    }
                                }

                                @* Show events *@
                                @foreach (var ev in Model.UserEvents)
                                {
                                    if (ev.EventDateTime.Day == day.DayOfMonth &&
                                    ev.EventDateTime.Month == Model.CurrentMonth &&
                                    ev.EventDateTime.Year == Model.CurrentYear)
                                    {
                                        <div class="badge bg-info">@ev.Title</div>
                                    }
                                }
                            }
                        </td>
                    }
                </tr>
            }
                            
                        </tr>
                    
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventModalLabel">New Event</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="eventForm" method="post">
                    <div class="mb-3">
                        <label asp-for="NewEvent.Title" class="form-label"></label>
                        <input asp-for="NewEvent.Title" class="form-control" placeholder="Title" />
                        <span asp-validation-for="NewEvent.Title" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="NewEvent.EventDateTime" class="form-label"></label>
                        <input asp-for="NewEvent.EventDateTime" class="form-control" type="datetime-local" />
                        <span asp-validation-for="NewEvent.EventDateTime" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="SelectedUserIDs" class="form-label"></label>
                        <select asp-for="SelectedUserIDs" asp-items="@(new SelectList(Model.UserList, "Key", "Value"))" multiple class="form-select">
                        </select>
                    </div>

                    <div class="mb-3">
                        <label asp-for="NewEvent.Description" class="form-label"></label>
                        <textarea asp-for="NewEvent.Description" class="form-control" rows="3" placeholder="Enter details"></textarea>
                        <span asp-validation-for="NewEvent.Description" class="text-danger"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary" form="eventForm">Save</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>